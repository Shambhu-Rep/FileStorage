SoapUI:
API Testing tool
For manual and automation testing of SOAP and REST APIs

Use:
To create quick and efficient API test
To create API functional,perfoemance and security tests
To create API testing automation framework

GUI component of SoaUI
	cross platform tool
	built entirely over Java platform
	uses Swing for GUI
T05:
------	
1. What is property in soapui
2. Why do we use it
3. How to create properties at different levels
4. How to refer properties

Properties can be used as variables to store values that can be referred in testing

Properties can be accessed at following levels:
Project       -  ${#Project​#PropertyName​}
TestSuite   -  ${#TestSuite​#PropertyName​}
TestCase   -  ${#TestCase​#PropertyName​}
TestStep    -  ${TestStepName#PropertyName​}

System   -    ${#System​#PropertyName​}
Env        -     ${#Env​#PropertyName​}
Global    -     ${#Global​#PropertyName​} 

T06:
-------
1. How to get property
2. How to set property
3. How to add property
4. How to remove property
5. How to loop through all properties

References
https://www.soapui.org/scripting-prop...​

Notes

// Get and Set Property

//Project
testRunner.testCase.testSuite.project.getPropertyValue("Name")
testRunner.testCase.testSuite.project.setPropertyValue("Name","I am in Project")

//TestSuite
testRunner.testCase.testSuite.getPropertyValue("Name")
testRunner.testCase.testSuite.setPropertyValue("Name","I am in TestSuite")

//TestCase
testRunner.testCase.getPropertyValue("Name")
testRunner.testCase.setPropertyValue("Name","I am in TestCase")

//TestStep
testRunner.testCase.getTestStepByName("CountryCodes").getPropertyValue("Name")
testRunner.testCase.getTestStepByName("CountryCodes").setPropertyValue("Name","I am in Test Step")

//Global
com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "Name")
com.eviware.soapui.SoapUI.globalProperties.setPropertyValue( "Name","I am in Global Prop" )


// Add Property
testRunner.testCase.testSuite.project.addProperty("DOB")

// Remove property
//Project
testRunner.testCase.testSuite.project.removeProperty("Name");
//TestSuite
testRunner.testCase.testSuite.removeProperty("Name")

// Loop through properties

testRunner.testCase.properties.each
{
 key,value -
 log.info (testRunner.testCase.getPropertyValue(key))
 //log.info (key+" - "+value)
}

T15:
------
1. What are assertions
2. Why do we add assertions
3. Diff types of assertions in SoapUI


ASSERTIONS - validations on the response

expected vs actual

REST - https://restcountries.eu/​
SOAP - https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa18xSW53b1Z4RzV5ZlZrcVR4TTZJUFB0RWljZ3xBQ3Jtc0tsRS1SU3hMUE0tb3QtWkpJNFhWeWdGOVlIbG5pcEZCcERTZXZNMDUySVVBREZtZkhjVElUUEVvWXlIYTljblk3RXRkZnFRaHVnVDNjRXIwZFlsOHhSQy0ybHZhaFRydmg3a2dJWmgxc1dRWDAtNW5Zcw&q=http%3A%2F%2Fwebservices.oorsprong.org%2Fwebsamples.countryinfo%2FCountryInfoService.wso%3FWSDL

T16:
-----
How to add different assertions in SoapUI

Contains 
XPath Match
XQuery Match
Compliance
JSON Path assertions

SLA - SERVICE LEVEL AGREEMENT


JSON PATH FINDER - chrome-extension://bankcpekihijigplompggpdolehhnale/index.html

T17:
-----
1. What is Script Assertion
2. How to add Script Assertion
3. Different assertion scripts for xml and json messages
4. Tips and Tricks
  

Script assertion works on the last reponse received in soapui
works with messageExchange object
(messageExchange object stores all the details of the last request and response)


Script Assertion samples
=====================

//check response time
assert messageExchange.timeTaken<4000

//check for Endpoint
 log.info messageExchange.getEndpoint() 

//check for TimeTaken
 log.info messageExchange.getTimeTaken()  

//check for header
log.info (messageExchange.responseHeaders["content-length"])
assert messageExchange.responseHeaders["Content-Length"] != null

//check attachments
assert messageExchange.responseAttachments.length == 0
log.info (messageExchange.responseAttachments.length)

//validate response nodes
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )
def refNum = responseHolder.getNodeValue("//m:CountryCurrencyResult/m:sName")
assert responseHolder.getNodeValue("//m:CountryCurrencyResult/m:sName") == "Rupees"

//to get response
def resp = messageExchange.responseContentAsXml.toString()


For JSON response
-------------------------------

//get json response
import groovy.json.JsonSlurper
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)

//assert node values
log.info json.name
assert json.capital.toString() != null
assert json.name.toString() == "[Taiwan]"

testStepName = messageExchange.modelItem.testStep.name//to get the Test Step Name
log.info testStepName
xmlHold = messageExchange.responseContentAsXml.toString()  //to store the response as Xml string

