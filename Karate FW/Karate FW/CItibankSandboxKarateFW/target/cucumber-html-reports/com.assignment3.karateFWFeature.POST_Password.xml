<testsuite failures="0" name="com/assignment3/karateFWFeature/POST_Password.feature" skipped="0" tests="4" time="7.141462">
  <testcase classname="com.assignment3.karateFWFeature.POST_Password" name="Initiate the Password API with valid fields and verify the Expected Result" time="0.997753">
    <system-out>* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
Given url testData.baseURI + testData.e2eKey_Resource ..................... passed
And header Authorization = accessToken .................................... passed
And header client_id = testData.client_Id ................................. passed
And header client_secret = testData.client_Secret ......................... passed
And header uuid = randomString(20) ........................................ passed
And header Content-Type = testData.Content_Type_e2eKey .................... passed
And header Accept = testData.accept ....................................... passed
And header countryCode = testData.country_Code ............................ passed
And header businessCode = testData.business_Code .......................... passed
And header channelId = testData.channel_Id ................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.modulus == '#present' .................................... passed
* match response.exponent == '#string' .................................... passed
* def biz_Token = responseHeaders['bizToken'][0] .......................... passed
* print biz_Token ......................................................... passed
* print '********* Modulus Exponent And bizToken Generated *********' ..... passed</system-out>
  </testcase>
  <testcase classname="com.assignment3.karateFWFeature.POST_Password" name="Initiate the Password API with valid fields and verify the Expected Result" time="1.954519">
    <system-out>* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
Given url testData.baseURI + testData.e2eKey_Resource ..................... passed
And header Authorization = accessToken .................................... passed
And header client_id = testData.client_Id ................................. passed
And header client_secret = testData.client_Secret ......................... passed
And header uuid = randomString(20) ........................................ passed
And header Content-Type = testData.Content_Type_e2eKey .................... passed
And header Accept = testData.accept ....................................... passed
And header countryCode = testData.country_Code ............................ passed
And header businessCode = testData.business_Code .......................... passed
And header channelId = testData.channel_Id ................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.modulus == '#present' .................................... passed
* match response.exponent == '#string' .................................... passed
* def biz_Token = responseHeaders['bizToken'][0] .......................... passed
* print biz_Token ......................................................... passed
* print '********* Modulus Exponent And bizToken Generated *********' ..... passed
* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST_Password.feature@e2eKey') . passed
* print testData.baseURI + testData.ResourceOwner_Resource ................ passed
Given url testData.baseURI + testData.ResourceOwner_Resource .............. passed
And header Authorization = testData.base64 ................................ passed
And header Accept = testData.accept ....................................... passed
And header uuid = randomString(20) ........................................ passed
And header BizToken = biz_Token ........................................... passed
And header Content-Type = testData.Content_Type ........................... passed
And form field grant_type = testData.ResourceOwner_Grant_Type ............. passed
And form field scope = testData.Scope ..................................... passed
And form field username = testData.Username ............................... passed
And form field password = testData.encryptedStringPass .................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.token_type == '#present' ................................. passed
* match response.access_token == '#string' ................................ passed
* def Re_tokenType = response.token_type .................................. passed
* def Re_accessToken = response.access_token .............................. passed
* print Re_tokenType ...................................................... passed
* print Re_accessToken .................................................... passed
* def authorization = Re_tokenType+' '+Re_accessToken ..................... passed
* print authorization ..................................................... passed
* print '********* Resource Owner AccessToken Generated *********' ........ passed</system-out>
  </testcase>
  <testcase classname="com.assignment3.karateFWFeature.POST_Password" name="To verify the APIs request with invalid username" time="2.190561">
    <system-out>* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
Given url testData.baseURI + testData.e2eKey_Resource ..................... passed
And header Authorization = accessToken .................................... passed
And header client_id = testData.client_Id ................................. passed
And header client_secret = testData.client_Secret ......................... passed
And header uuid = randomString(20) ........................................ passed
And header Content-Type = testData.Content_Type_e2eKey .................... passed
And header Accept = testData.accept ....................................... passed
And header countryCode = testData.country_Code ............................ passed
And header businessCode = testData.business_Code .......................... passed
And header channelId = testData.channel_Id ................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.modulus == '#present' .................................... passed
* match response.exponent == '#string' .................................... passed
* def biz_Token = responseHeaders['bizToken'][0] .......................... passed
* print biz_Token ......................................................... passed
* print '********* Modulus Exponent And bizToken Generated *********' ..... passed
* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST_Password.feature@e2eKey') . passed
* print testData.baseURI + testData.ResourceOwner_Resource ................ passed
Given url testData.baseURI + testData.ResourceOwner_Resource .............. passed
And header Authorization = testData.base64 ................................ passed
And header Accept = testData.accept ....................................... passed
And header uuid = randomString(20) ........................................ passed
And header BizToken = biz_Token ........................................... passed
And header Content-Type = testData.Content_Type ........................... passed
And form field grant_type = testData.ResourceOwner_Grant_Type ............. passed
And form field scope = testData.Scope ..................................... passed
And form field username = testData.Username ............................... passed
And form field password = testData.encryptedStringPass .................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.token_type == '#present' ................................. passed
* match response.access_token == '#string' ................................ passed
* def Re_tokenType = response.token_type .................................. passed
* def Re_accessToken = response.access_token .............................. passed
* print Re_tokenType ...................................................... passed
* print Re_accessToken .................................................... passed
* def authorization = Re_tokenType+' '+Re_accessToken ..................... passed
* print authorization ..................................................... passed
* print '********* Resource Owner AccessToken Generated *********' ........ passed
* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST_Password.feature@e2eKey') . passed
* print testData.baseURI + testData.ResourceOwner_Resource ................ passed
Given url testData.baseURI + testData.ResourceOwner_Resource .............. passed
And header Authorization = testData.base64 ................................ passed
And header Accept = testData.accept ....................................... passed
And header uuid = randomString(20) ........................................ passed
And header BizToken = biz_Token ........................................... passed
And header Content-Type = testData.Content_Type ........................... passed
And form field grant_type = testData.ResourceOwner_Grant_Type ............. passed
And form field scope = testData.Scope ..................................... passed
And form field username = testData.Invalid_Username ....................... passed
And form field password = testData.encryptedStringPass .................... passed
When method post .......................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
Then status 401 ........................................................... passed
* print response .......................................................... passed
* match response.type == 'invalid' ........................................ passed
* match response.code == '401' ............................................ passed
* match response.details == 'Authorization credentials are missing or invalid' . passed
* print '********* Resource Owner- Invalid Username *********' ............ passed</system-out>
  </testcase>
  <testcase classname="com.assignment3.karateFWFeature.POST_Password" name="To verify the APIs request with invalid username" time="1.998629">
    <system-out>* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
Given url testData.baseURI + testData.e2eKey_Resource ..................... passed
And header Authorization = accessToken .................................... passed
And header client_id = testData.client_Id ................................. passed
And header client_secret = testData.client_Secret ......................... passed
And header uuid = randomString(20) ........................................ passed
And header Content-Type = testData.Content_Type_e2eKey .................... passed
And header Accept = testData.accept ....................................... passed
And header countryCode = testData.country_Code ............................ passed
And header businessCode = testData.business_Code .......................... passed
And header channelId = testData.channel_Id ................................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.modulus == '#present' .................................... passed
* match response.exponent == '#string' .................................... passed
* def biz_Token = responseHeaders['bizToken'][0] .......................... passed
* print biz_Token ......................................................... passed
* print '********* Modulus Exponent And bizToken Generated *********' ..... passed
* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST_Password.feature@e2eKey') . passed
* print testData.baseURI + testData.ResourceOwner_Resource ................ passed
Given url testData.baseURI + testData.ResourceOwner_Resource .............. passed
And header Authorization = testData.base64 ................................ passed
And header Accept = testData.accept ....................................... passed
And header uuid = randomString(20) ........................................ passed
And header BizToken = biz_Token ........................................... passed
And header Content-Type = testData.Content_Type ........................... passed
And form field grant_type = testData.ResourceOwner_Grant_Type ............. passed
And form field scope = testData.Scope ..................................... passed
And form field username = testData.Username ............................... passed
And form field password = testData.encryptedStringPass .................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.token_type == '#present' ................................. passed
* match response.access_token == '#string' ................................ passed
* def Re_tokenType = response.token_type .................................. passed
* def Re_accessToken = response.access_token .............................. passed
* print Re_tokenType ...................................................... passed
* print Re_accessToken .................................................... passed
* def authorization = Re_tokenType+' '+Re_accessToken ..................... passed
* print authorization ..................................................... passed
* print '********* Resource Owner AccessToken Generated *********' ........ passed
* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST_Password.feature@e2eKey') . passed
* print testData.baseURI + testData.ResourceOwner_Resource ................ passed
Given url testData.baseURI + testData.ResourceOwner_Resource .............. passed
And header Authorization = testData.base64 ................................ passed
And header Accept = testData.accept ....................................... passed
And header uuid = randomString(20) ........................................ passed
And header BizToken = biz_Token ........................................... passed
And header Content-Type = testData.Content_Type ........................... passed
And form field grant_type = testData.ResourceOwner_Grant_Type ............. passed
And form field scope = testData.Scope ..................................... passed
And form field username = testData.Invalid_Username ....................... passed
And form field password = testData.encryptedStringPass .................... passed
When method post .......................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
Then status 401 ........................................................... passed
* print response .......................................................... passed
* match response.type == 'invalid' ........................................ passed
* match response.code == '401' ............................................ passed
* match response.details == 'Authorization credentials are missing or invalid' . passed
* print '********* Resource Owner- Invalid Username *********' ............ passed
* call read('classpath:reusable.feature') ................................. passed
* def testData = read('classpath:com/assignment3/karateFW/testdata/testData.json') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST-Client_Credentials.feature@access_token') . passed
* call read('classpath:com/assignment3/karateFWFeature/POST_Password.feature@e2eKey') . passed
* print testData.baseURI + testData.ResourceOwner_Resource ................ passed
Given url testData.baseURI + testData.ResourceOwner_Resource .............. passed
And header Authorization = testData.base64 ................................ passed
And header Accept = testData.accept ....................................... passed
And header uuid = randomString(20) ........................................ passed
And header BizToken = biz_Token ........................................... passed
And header Content-Type = testData.Content_Type ........................... passed
And form field grant_type = testData.ResourceOwner_Grant_Type ............. passed
And form field scope = testData.Scope ..................................... passed
And form field username = testData.Username ............................... passed
And form field password = testData.InvalidPass ............................ passed
When method post .......................................................... passed
Then status 401 ........................................................... passed
* print 'Response Time : ' + responseTime ................................. passed
And assert responseTime &lt; 10000 ........................................... passed
And match responseType == 'json' .......................................... passed
* print response .......................................................... passed
* match response.type == 'invalid' ........................................ passed
* match response.code == '401' ............................................ passed
* match response.details == 'Authorization credentials are missing or invalid' . passed
* print '********* Resource Owner- Invalid Password *********' ............ passed</system-out>
  </testcase>
</testsuite>
